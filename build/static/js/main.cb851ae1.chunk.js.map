{"version":3,"sources":["store/Card.js","store/SideMenu.js","store/UserManagement.js","store/SearchStore.js","components/extension/TextIcon.js","components/layout/SideMenu.js","components/layout/TopMenu.js","components/layout/Layout.js","components/pages/Home.js","components/pages/Empresas.js","components/pages/Funcionarios.js","components/pages/Categorias.js","components/pages/Perguntas.js","components/pages/Perfil.js","components/layout/App.js","components/common/registerServiceWorker.js","index.js","store/configureStore.js"],"names":["initialState","count","reducer","state","action","type","Object","objectSpread","smallMenu","actionCreators","toggleSideMenu","users","name","email","role","caloryLimit","concat","toConsumableArray","user","text","search","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","wrap","_context","prev","next","stop","_x","_x2","apply","this","arguments","TextIcon","style","alignSelf","paddingLeft","react_default","createElement","whiteSpace","display","dist_es","size","color","props","hidden","hideText","children","Component","SideMenu","activeItem","handleItemClick","e","_this","setState","changeSize","smallSidebar","fixed","borderless","className","vertical","Item","as","Link","to","active","onClick","TextIcon_TextIcon","getMenu","connect","sideMenu","bindActionCreators","sair","localStorage","setItem","window","location","href","TopMenu","event","actions","target","value","src","Menu","position","circular","assign","sideAction","searchAction","Login","_useState","useState","_useState2","slicedToArray","altura","setAltura","_useState3","_useState4","largura","setLargura","_useState5","_useState6","usuario","setUsuario","_useState7","_useState8","senha","setSenha","_useState9","_useState10","logado","setLogado","_logar","options","res","men","method","headers","Content-Type","Access-Control-Allow-Origin","data","url","axios","sent","map","m","mensagem","toString","r","codigo","alert","onresize","w","document","documentElement","clientWidth","h","clientHeight","useEffect","innerHeight","innerWidth","getItem","Fragment","layout_TopMenu","layout_SideMenu","width","height","alignItems","justifyContent","backgroundColor","shadowColor","shadowOffset","shadowOpacity","elevation","borderRadius","flexDirection","top","marginTop","Group","unstackable","widths","Field","onChange","_ref2","outline","borderWidth","fontSize","placeholder","fluid","_ref3","Layout","Home","empresas","setEmpresas","novo","setNovo","checklists","setChecklists","cod_empresa","setcod_empresa","cod_checklist","setcod_checklist","_useState11","_useState12","num_contrato","setnum_contrato","_useState13","_useState14","empresa_origem","setempresa_origem","_useState15","_useState16","empresa_destino","setempresa_destino","_useState17","_useState18","numero_container","setnumero_container","_useState19","_useState20","numero_oic","setnumero_oic","_useState21","_useState22","quantidade","setquantidade","_useState23","_useState24","status","_useState25","_useState26","setdata","_useState27","_useState28","id","setId","trazerEmpresas","_trazerEmpresas","cd_impresa","length","key","nome","_cadCheclist","_callee2","_context2","ListarChecklist","formatarData","params","d","Date","getDate","getMonth","getFullYear","_TrazerCheclist","_callee3","_context3","_UpdChecklist","_callee4","_context4","_ListarChecklist","_callee5","_context5","TrazerCheclist","_useState29","_useState30","atualizador","setAtualizador","_ExcluirChecklist","_callee6","_context6","_updateStatus","_callee7","params2","_context7","_AbrirPDF","_callee8","_context8","open","pdf","setTimeout","compact","celled","Header","fullWidth","Row","HeaderCell","Body","c","Cell","_x3","updateStatus","_x4","AbrirPDF","Or","ExcluirChecklist","Footer","colSpan","selection","onSearchChange","searchQuery","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","console","log","_ref10","UpdChecklist","cadCheclist","primary","Empresas","cidades","setCidades","estados","setEstados","setcd_impresa","codigo_impresa","setCodigo_empresa","setNome","cnpj","setcnpj","setEmail","telefone","setTelefone","celular","setCelular","estado","setEstado","cidade","setCidade","_trazerCidades","est","_trazerEstados","sigla","_cadEmpresa","ListarEmpresas","_TrazerEmpresa","_UpdEmpresa","_ListarEmpresas","_ExcluirEmpresa","trazerCidades","TrazerEmpresa","parseInt","Math","random","trazerEstados","ExcluirEmpresa","v","replace","UpdEmpresa","cadEmpresa","funcionarios","setFuncionarios","codigo_funcionario","setCodigo_funcionario","Rsenha","setRSenha","_cadFuncionario","ListarFuncionarios","_TrazerFuncionarios","_UpdFuncionario","_ListarFuncionarios","_ExcluirFuncionario","TrazerFuncionarios","codigoF","ExcluirFuncionario","icon","UpdFuncionario","cadFuncionario","Categoria","categorias","setcategorias","tituloPT","settituloPT","tituloEN","settituloEN","foto","setfoto","ordem","setordem","fot","_cadCategorias","ListarCategorias","_TrazerCategorias","_UpdCategoria","_ListarCategorias","_ExcluirCategoria","TrazerCategorias","ExcluirCategoria","class","UpdCategoria","cadCategorias","perguntas","setPerguntas","setCategorias","categoriasAll","setCategoriasAll","codigo_categoria","setcodigo_categoria","setFoto","nomeCateg","setnomeCateg","perguntaPT","setperguntaPT","perguntaEN","setperguntaEN","escrever","setescrever","assinalar","setassinalar","assinatura","setassinatura","_useState31","_useState32","_useState33","_useState34","escolher","slecionarCategoria","filter","codigoID","es","ass","id_categoria","ListarPerguntas","_TrazerPerguntas","_ListarPerguntas","dat","_ExcluirPergunta","TrazerPerguntas","ExcluirPergunta","Perfil","tipo_conta","settipo_conta","logo","setlogo","responsavel","setresponsavel","empresa","setempresa","inscricao","setinscricao","setemail","settelefone","setusuario","setsenha","setid","setestado","setcidade","cpfCnpj","trazerDados","_trazerDados","dad","cd_funcionario","undefined","tipo_cadastro","_update","_encodeImageFileAsURL","formData","FormData","append","post","then","response","catch","err","encodeImageFileAsURL","files","update","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","baseUrl","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","store","reducers","card","Card","userManagement","UserManagement","searchStore","SearchStore","middleware","thunk","routerMiddleware","enhancers","rootReducer","combineReducers","routing","routerReducer","createStore","compose","applyMiddleware","configureStore","initialReduxState","rootElement","getElementById","ReactDOM","render","react_redux_es","react_router_redux_es","Route","exact","path","component","Funcionarios","Perguntas","URL","process","origin","addEventListener","fetch","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWroker"],"mappings":"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","file":"static/js/main.cb851ae1.chunk.js","sourcesContent":["const incrementCountType = 'INCREMENT_COUNT';\nconst decrementCountType = 'DECREMENT_COUNT';\nconst initialState = { count: 0 };\n\nexport const actionCreators = {\n  increment: () => ({ type: incrementCountType }),\n  decrement: () => ({ type: decrementCountType })\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === incrementCountType) {\n    return { ...state, count: state.count + 1 };\n  }\n\n  if (action.type === decrementCountType) {\n    return { ...state, count: state.count - 1 };\n  }\n\n  return state;\n};\n","const toggleMenu = 'TOGGLE_MENU';\nconst initialState = { smallMenu: false };\n\nexport const actionCreators = {\n  toggleSideMenu: () => ({ type: toggleMenu }),\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === toggleMenu) {\n    return { ...state, smallMenu: !state.smallMenu};\n  }\n\n  return state;\n};\n","const GET_ALL_USERS_ACTION = \"GET_ALL_USERS\";\nconst DELETE_USER_ACTION = \"DELETE_USER\";\nconst UPDATE_USER_ACTION = \"UPDATE_USER\";\nconst ADD_USER_ACTION = \"ADD_USER\";\n\nconst initialState = {\n  users: [\n    {\n      name: \"Albiona\",\n      email: \"alb@gmail.com\",\n      role: \"Admin\",\n      caloryLimit: 123\n    },\n    {\n      name: \"Albiona\",\n      email: \"alb@gmail.com\",\n      role: \"Admin\",\n      caloryLimit: 123\n    },\n    {\n      name: \"Albiona\",\n      email: \"alb@gmail.com\",\n      role: \"Admin\",\n      caloryLimit: 123\n    }\n  ]\n};\n\nexport const actionCreators = {\n  getUsers: () => async (dispatch, getState) => {\n    // dispatch({ type: GET_ALL_USERS_ACTION, users: json });\n  },\n  removeUser: id => async (dispatch, getState) => {\n    dispatch({\n      type: DELETE_USER_ACTION,\n      users: getState().userManagement.users.filter(m => m.id !== id)\n    });\n  },\n  editUser: user => async (dispatch, getState) => {\n    dispatch({\n      type: UPDATE_USER_ACTION,\n      users: getState().userManagement.users.map(\n        m => (m.id === user.id ? user : m)\n      )\n    });\n  },\n  addUser: user => async (dispatch, getState) => {\n    dispatch({\n      type: ADD_USER_ACTION,\n      user: Object.assign({}, user, { id: Math.random() })\n    });\n  }\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === GET_ALL_USERS_ACTION) {\n    return { ...state, users: action.users };\n  }\n  if (action.type === DELETE_USER_ACTION) {\n    return { ...state, users: action.users };\n  }\n  if (action.type === UPDATE_USER_ACTION) {\n    return { ...state, users: action.users };\n  }\n  if (action.type === ADD_USER_ACTION) {\n    return { ...state, users: [...state.users, action.user] };\n  }\n\n  return state;\n};\n","const SEARCH_BY_TEXT = 'SEARCH_BY_TEXT';\nconst initialState = { text: '' };\n\nexport const actionCreators = {\n    search: (text) => async (dispatch, getState) => {\n      dispatch({ type: SEARCH_BY_TEXT, text: text });\n  },\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === SEARCH_BY_TEXT) {\n    return { ...state, text: action.text };\n  }\n\n  return state;\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Icon} from \"semantic-ui-react\";\n\nexport default class TextIcon extends Component {\n\n    style = {\n        alignSelf: 'center',\n        paddingLeft: '4px'\n    };\n\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        hideText: PropTypes.bool.isRequired,\n        color: PropTypes.string\n    };\n\n    render() {\n        return (\n            <div style={{whiteSpace: 'nowrap', display: 'inline-flex'}}>\n                <Icon size='large'\n                      color={this.props.color}\n                      name={this.props.name}/>\n                <div style={this.style} hidden={this.props.hideText}>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\";\nimport TextIcon from \"../extension/TextIcon\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../../store/SideMenu\";\n\nclass SideMenu extends Component {\n    state = {\n        activeItem: 'dashboard',\n    };\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n    changeSize = () => this.setState({ smallSidebar: !this.props.smallMenu });\n\n    getMenu() {\n        const { activeItem } = this.state;\n        return (\n            <Menu fixed='left' borderless className={(this.props.smallMenu ? 'small-side' : '') + ' side'} vertical>\n                <Menu.Item as={Link} to={'/checklist'} name='checklist' active={activeItem === 'checklist'}\n                    onClick={this.handleItemClick}>\n                    <TextIcon hideText={this.props.smallMenu} color='teal' name='home'>\n                        Checklists\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/empresas'}\n                    name='empresas'\n                    active={activeItem === 'empresas'}\n                    onClick={this.handleItemClick}>\n                    <TextIcon hideText={this.props.smallMenu} name='calendar'>\n                        Empresas\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item\n                    as={Link} to={'/funcionarios'}\n                    name='funcionarios'\n                    active={activeItem === 'funcionarios'}\n                    onClick={this.handleItemClick}\n                >\n                    <TextIcon hideText={this.props.smallMenu} name='users'>\n                        Funcionarios\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/card'} name='card' active={activeItem === 'card'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Relatorio\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/categoria'} name='categoria' active={activeItem === 'categoria'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Categorias\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/perguntas'} name='perguntas' active={activeItem === 'perguntas'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Perguntas\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/perfil'} name='perfil' active={activeItem === 'perfil'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Perfil\n                    </TextIcon>\n                </Menu.Item>\n\n            </Menu>\n        )\n    }\n\n    render() {\n        return (\n            <div className='parent'>\n                <div className={(this.props.smallMenu ? 'small-side ' : '') + 'side'}>\n                    {this.getMenu()}\n                </div>\n                <div className={(this.props.smallMenu ? 'small-content ' : '') + 'content'}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => state.sideMenu,\n    dispatch => bindActionCreators(actionCreators, dispatch)\n)(SideMenu);\n","import React, {Component} from 'react'\nimport {Icon,\n        Image,\n        Menu,  \n       } from 'semantic-ui-react'\nimport {actionCreators as sideAction} from \"../../store/SideMenu\";\nimport {actionCreators as searchAction} from \"../../store/SearchStore\";\nimport {bindActionCreators} from \"redux\";\nimport { connect } from 'react-redux';\n\nfunction sair(){\n  localStorage.setItem(\"Logado\", 'flase') \n  localStorage.setItem(\"Cd_impresa\", '') \n  window.location.href = \"/\";\n}\nclass TopMenu extends Component {\n  state = {};\n  \n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  doSearch(event) {\n      this.props.actions.search(event.target.value);  \n  } \n\n  render() {\n    return (\n      <Menu fixed=\"top\" className=\"top-menu\">\n        <Menu.Item className=\"logo-space-menu-item\">\n          <div className=\"display-inline logo-space\">\n            <Image src=\"./logo.png\" />\n          </div>\n        </Menu.Item>\n\n        <Menu.Item\n          className=\"no-border\"\n          onClick={this.props.actions.toggleSideMenu}\n        >\n          <Icon name=\"bars\" />\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">\n    \n          <Menu.Item className=\"no-border\" position=\"right\">\n            <div onClick={sair}  className=\"display-inline\">\n              <Image\n                circular\n                size={\"mini\"}\n                src=\"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\"\n              />\n              Sair\n            </div>\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n    state => state.sideMenu,\n     dispatch => {\n        return {\n            actions: bindActionCreators(Object.assign({}, sideAction, searchAction), dispatch)\n        }}\n)(TopMenu);\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport 'semantic-ui-css/semantic.min.css'\nimport { Button, Form, Icon, Input, Image } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport SideMenu from \"../layout/SideMenu\";\nimport TopMenu from \"../layout/TopMenu\";\n\nfunction Login({ props }) {\n    const [altura, setAltura] = useState(0);\n    const [largura, setLargura] = useState(0);\n    const [usuario, setUsuario] = useState('');\n    const [senha, setSenha] = useState('');\n    const [logado, setLogado] = useState(false);\n\n    window.onresize = function () {\n        var w = document.documentElement.clientWidth;\n        var h = document.documentElement.clientHeight;\n        setAltura(h);\n        setLargura(w);\n    };\n\n    useEffect(() => {\n        setAltura(window.innerHeight);\n        setLargura(window.innerWidth);\n    }, []);\n\n    useEffect(() => {\n        if (logado === true) {\n            window.location.href = \"/checklist\";\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.getItem(\"Logado\") === 'true' ? setLogado(true) : setLogado(false)\n    }, []);\n\n    async function logar() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: { usuario, senha },\n            url: 'Login',\n        };\n        const res = await axios(options);\n        const men = res.data.map(m => (m.mensagem)).toString();\n\n        if (men === '') {\n            setLogado(true);\n            window.location.href = \"/checklist\";\n            localStorage.setItem(\"Logado\", 'true')\n            localStorage.setItem(\"Cd_impresa\", res.data.map(r => (r.codigo)).toString())\n        } else {\n            alert(men)\n        }\n\n    };\n    if (logado === true) {\n        return (\n            <>\n                <div className=\"menu\">\n                    <TopMenu />\n                </div>\n                <div className=\"main-content\">\n                    <SideMenu>\n                        {props.children}\n                    </SideMenu>\n                </div>\n            </>\n        )\n    } else {\n        return (\n\n\n            <div style={{ width: largura, height: altura, display: logado === true ? 'none' : 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: 'white' }}>\n\n                <div style={{\n                    width: 400, height: 350, shadowColor: '#470000',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.2,\n                    elevation: 5, borderRadius: 20, flexDirection: 'column', backgroundColor: '#cecece', display: 'flex', alignItems: 'center', justifyContent: 'center'\n                }}>\n                    <Image style={{ width: 300, position: 'absolute', top: 0, marginTop: 220 }} src=\"./logo2.png\" />\n\n                    <Form style={{ marginTop: 150 }}>\n\n                        <Form.Group unstackable widths={1}>\n                            <Form.Field>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setUsuario([value].toString())}\n                                    value={usuario}\n                                    style={{ width: 300, height: 50, outline: 0, borderRadius: 50, borderWidth: 0, fontSize: 20, paddingLeft: 10 }}\n                                    placeholder=\"Usuário\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group unstackable widths={1}>\n                            <Form.Field>\n                                <Input\n                                    type=\"password\"\n                                    onChange={(e, { value }) => setSenha([value].toString())}\n                                    value={senha}\n                                    style={{ width: 300, height: 50, outline: 0, borderRadius: 50, borderWidth: 0, fontSize: 20, paddingLeft: 10 }}\n                                    placeholder=\"Senha\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n                    </Form>\n\n                    <Button onClick={logar} color=\"green\">\n                        <Icon name=\"sign in alternate\" />\n                        <text>Entrar</text>\n                    </Button>\n\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default props => {\n    return (\n        <div className=\"grid\">\n\n            <Login props={props} />\n\n        </div>\n    )\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Button,\n  Form,\n  Header,\n  Icon,\n  Input,\n  Dropdown,\n  Segment,\n  Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport 'semantic-ui-css/semantic.min.css'\n\nexport default function Home() {\n\n  const [empresas, setEmpresas] = useState([]);\n  const [novo, setNovo] = useState(false);\n  const [checklists, setChecklists] = useState([]);\n  const [cod_empresa, setcod_empresa] = useState('');\n  const [cod_checklist, setcod_checklist] = useState('');\n  const [num_contrato, setnum_contrato] = useState('');\n  const [empresa_origem, setempresa_origem] = useState('');\n  const [empresa_destino, setempresa_destino] = useState('');\n  const [numero_container, setnumero_container] = useState('');\n  const [numero_oic, setnumero_oic] = useState('');\n  const [quantidade, setquantidade] = useState('');\n  const [status, setstatus] = useState('Aguardando');\n  const [data, setdata] = useState('');\n  const [id, setId] = useState('');\n\n  useEffect(() => {\n    setcod_empresa(localStorage.getItem(\"Cd_impresa\"))\n  }, [])\n\n  async function trazerEmpresas() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { cd_impresa: cod_empresa },\n      url: 'ListarEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      setEmpresas(\n        res.data.map(r => (\n          { key: r.nome, value: r.nome, text: r.nome }\n        ))\n      );\n    };\n  };\n\n  async function cadCheclist() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        cd_impresa: cod_empresa, cod_checklist, num_contrato, empresa_origem, empresa_destino, numero_container,\n        numero_oic, quantidade, status, data\n      },\n\n      url: 'CriarChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarChecklist();\n      setNovo(false);\n    }\n  };\n\n  function formatarData(params) {\n    let d = new Date(params).getDate();\n    let m = new Date(params).getMonth() + 1;\n    let a = new Date(params).getFullYear();\n\n    return a + '-' + (m < 10 ? '0' + m : m) + '-' + (d < 10 ? '0' + d : d)\n\n  }\n\n  async function TrazerCheclist() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        id\n      },\n      url: 'GetOneChecklist',\n    };\n\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      [res.data].map(r => (\n        setcod_checklist(r.cod_checklist),\n        setnum_contrato(r.num_contrato),\n        setempresa_origem(r.empresa_origem),\n        setempresa_destino(r.empresa_destino),\n        setnumero_container(r.numero_container),\n        setnumero_oic(r.numero_oic),\n        setquantidade(r.quantidade),\n        setdata(formatarData(r.data)),\n        setNovo(true)\n\n      ));\n\n    }\n\n  };\n\n  useEffect(() => {\n    if (id !== '') {\n      TrazerCheclist();\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (novo === false) {\n      setcod_checklist('');\n      setnum_contrato('');\n      setempresa_origem('');\n      setempresa_destino('');\n      setnumero_container('');\n      setnumero_oic('');\n      setquantidade('');\n      setId('');\n      setdata(formatarData(new Date()));\n    };\n  }, [novo]);\n\n  async function UpdChecklist() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        cod_checklist, num_contrato, empresa_origem, empresa_destino, numero_container,\n        numero_oic, quantidade, data, id\n      },\n\n      url: 'UpdateChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarChecklist();\n      setNovo(false);\n    }\n  };\n\n  async function ListarChecklist() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { cd_impresa: cod_empresa },\n      url: 'ListarChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      setChecklists([]);\n      trazerEmpresas()\n    } else {\n      setChecklists(res.data);\n      trazerEmpresas()\n    }\n  };\n  const [atualizador, setAtualizador] = useState(0);\n  useEffect(() => {\n    setTimeout(function () {\n      setAtualizador(atualizador + 1);\n    }, 2000)\n  }, [atualizador]);\n\n  useEffect(() => {\n    ListarChecklist();\n    trazerEmpresas();\n  }, [cod_empresa, atualizador]);\n\n  async function ExcluirChecklist(params) {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { id: params },\n      url: 'DeletarChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      ListarChecklist();\n    } else {\n      ListarChecklist();\n    }\n  };\n\n  async function updateStatus(params, params2) {\n\n    const stat = params2 === 'Aguardando' ? 'Concluido' : params2 === 'Concluido' ? 'Cancelado' : params2 === 'Cancelado' ? 'Aguardando' : null\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { id: params, status: stat },\n      url: 'UpdateStatus',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      ListarChecklist();\n    } else {\n      ListarChecklist();\n    }\n  };\n\n  async function AbrirPDF(params) {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { id: params },\n      url: 'GetOneResultados',\n    };\n    const res = await axios(options);\n\n    res.data.map(r => (window.open(\"https://c382-3-139-66-31.ngrok.io/pdf/\" + r.pdf, \"minhaJanela\")))\n  };\n\n  function Lista() {\n    return (\n      <>\n        {checklists.map(c => (\n          <Table.Row>\n            <Table.Cell> {c.num_contrato} </Table.Cell>\n            <Table.Cell> {c.cod_checklist}  </Table.Cell>\n            <Table.Cell> {c.empresa_origem}  </Table.Cell>\n            <Table.Cell> {c.empresa_destino}  </Table.Cell>\n            <Table.Cell> {c.quantidade}  </Table.Cell>\n            <Table.Cell> <Button onClick={() => updateStatus(c.id, c.status)} color={c.status === 'Aguardando' ? 'orange' : c.status === 'Concluido' ? 'green' : c.status === 'Cancelado' ? 'red' : null}> {c.status} </Button> </Table.Cell>\n            <Table.Cell>\n              <Button.Group>\n                <Button onClick={() => AbrirPDF(c.cod_checklist)} color=\"orange\" >\n                  <Icon name=\"file pdf\" />\n                </Button>\n                <Button.Or text='ou' />\n                <Button onClick={() => setId(c.id)}>\n                  <Icon name=\"pencil\" />\n                </Button>\n                <Button.Or text='ou' />\n                <Button onClick={() => ExcluirChecklist(c.id)} color='red'>\n                  <Icon name=\"delete\" />\n                </Button>\n              </Button.Group>\n\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </>\n    )\n  };\n\n  return (\n\n    <>\n\n      {novo === false ?\n        <Segment>\n          <Header>Lista de Checklists   <Button onClick={() => setNovo(!novo)} color='green'>Novo Checklist</Button></Header>\n          <Table compact celled>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>Nº Contrato</Table.HeaderCell>\n                <Table.HeaderCell>Nº do Checklist</Table.HeaderCell>\n                <Table.HeaderCell>Empresa de Origem</Table.HeaderCell>\n                <Table.HeaderCell>Empresa de Destino</Table.HeaderCell>\n                <Table.HeaderCell>Quantidade de Sacas</Table.HeaderCell>\n                <Table.HeaderCell>Status</Table.HeaderCell>\n                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>{Lista()}</Table.Body>\n\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan={7} />\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Segment>\n\n        : null}\n\n\n      {novo === true ?\n        <Segment>\n          <Form>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Empresa de Origem</label>\n                <Dropdown\n                  placeholder='Nome da empresa de origem.'\n                  fluid\n                  search\n                  selection\n                  value={empresa_origem}\n                  onSearchChange={(e, { searchQuery }) => setempresa_origem([searchQuery].toString())}\n                  onChange={(e, { value }) => setempresa_origem([value].toString())}\n                  options={empresas}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Empresa de Destino</label>\n                <Dropdown\n                  placeholder='Nome da empresa de Destino.'\n                  fluid\n                  search\n                  selection\n                  value={empresa_destino}\n                  onSearchChange={(e, { searchQuery }) => setempresa_destino([searchQuery].toString())}\n                  onChange={(e, { value }) => setempresa_destino([value].toString())}\n                  options={empresas}\n                />\n              </Form.Field>\n            </Form.Group>\n\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Número do contrato</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setnum_contrato([value].toString())}\n                  value={num_contrato}\n                  placeholder=\"Número do contrato.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Número do container</label>\n                <Input\n                  type=\"text\"\n                  onChange={(e, { value }) => setnumero_container([value].toString())}\n                  value={numero_container}\n                  placeholder=\"Número do container.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Número do checklist</label>\n                <Input\n                  type=\"text\"\n                  onChange={(e, { value }) => setcod_checklist([value].toString())}\n                  value={cod_checklist}\n                  placeholder=\"Número do checklist.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Código do OIC</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setnumero_oic([value].toString())}\n                  value={numero_oic}\n                  placeholder=\"Código do OIC.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Data do Checklist</label>\n                <Input\n                  type=\"date\"\n                  onChange={(e, { value }) => console.log([value].toString())}\n                  value={data}\n                  placeholder=\"Data do Checklist.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Quantidade de Sacas</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setquantidade([value].toString())}\n                  value={quantidade}\n                  placeholder=\"Quantidade de Sacas.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Button onClick={() => id !== '' ? UpdChecklist() : cadCheclist()} primary type=\"submit\" >\n              {id !== '' ? 'Editar' : 'Salvar'}\n            </Button>\n            <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n          </Form>\n        </Segment>\n        : null}\n    </>\n\n  );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Button,\n  Form,\n  Header,\n  Icon,\n  Input,\n  Dropdown,\n  Segment,\n  Table\n} from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport axios from \"axios\";\n\nexport default function Empresas() {\n\n  const [novo, setNovo] = useState(false);\n  const [empresas, setEmpresas] = useState([]);\n  const [cidades, setCidades] = useState([]);\n  const [estados, setEstados] = useState([]);\n\n  const [cd_impresa, setcd_impresa] = useState('');\n  const [codigo_impresa, setCodigo_empresa] = useState('');\n  const [nome, setNome] = useState('');\n  const [cnpj, setcnpj] = useState('');\n  const [email, setEmail] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [celular, setCelular] = useState('');\n  const [estado, setEstado] = useState('MG');\n  const [cidade, setCidade] = useState('');\n  const [id, setId] = useState('');\n\n  useEffect(()=>{\n    setcd_impresa(localStorage.getItem(\"Cd_impresa\"))\n  },[])\n\n  async function trazerCidades() {\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {},\n      url: 'https://servicodados.ibge.gov.br/api/v1/localidades/estados/' + estado + '/municipios?orderBy=nome',\n    };\n    const res = await axios(options);\n    const est = res.data;\n    setCidades(\n      est.map(e => (\n        { key: e.id, value: e.nome, text: e.nome }\n      ))\n    )\n  };\n  useEffect(() => {\n    trazerCidades()\n  }, [estado])\n\n  async function trazerEstados() {\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {},\n      url: 'https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome',\n    };\n    const res = await axios(options);\n    const est = res.data;\n    setEstados(\n      est.map(e => (\n        { key: e.id, value: e.sigla, text: e.nome }\n      ))\n    )\n  };\n\n  async function cadEmpresa() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        cd_impresa, codigo_impresa, nome, cnpj, email, telefone, celular, estado, cidade\n      },\n      url: 'CriarEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarEmpresas();\n      setNovo(false);\n    }\n  };\n\n  async function TrazerEmpresa() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        id\n      },\n      url: 'GetOneEmpresas',\n    };\n\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      [res.data].map(r => (\n        setNome(r.nome),\n        setCodigo_empresa(r.codigo_impresa),\n        setcnpj(r.cnpj),\n        setCelular(r.celular),\n        setTelefone(r.telefone),\n        setEmail(r.email),\n        setEstado(r.estado),\n        setCidade(r.cidade),\n        setNovo(true)\n\n      ));\n\n    }\n\n  };\n\n  useEffect(() => {\n    if (id !== '') {\n      TrazerEmpresa();\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (novo === false) {\n      setNome('');\n      setcnpj('');\n      setCelular('');\n      setTelefone('');\n      setEmail('');\n      setEstado('');\n      setCidade('');\n      setId('');\n      setCodigo_empresa(parseInt(Math.random() * (999999 - 100000) + 100000))\n    };\n  }, [novo]);\n\n  async function UpdEmpresa() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        nome, cnpj, email, telefone, celular, estado, cidade, id\n      },\n\n      url: 'UpdateEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarEmpresas();\n      setNovo(false);\n    }\n  };\n\n  async function ListarEmpresas() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {cd_impresa},\n      url: 'ListarEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      setEmpresas([]);\n    } else {\n      setEmpresas(res.data);\n    }\n  };\n  useEffect(() => {\n    ListarEmpresas();\n    trazerEstados()\n  }, [cd_impresa]);\n\n  async function ExcluirEmpresa(params) {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { id: params },\n      url: 'DeletarEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      ListarEmpresas();\n    } else {\n      ListarEmpresas();\n    }\n  };\n\n  function cpfCnpj(v) {\n\n    //Remove tudo o que não é dígito\n    v = v.replace(/\\D/g, \"\")\n\n    if (v.length <= 14) {\n\n      //Coloca ponto entre o segundo e o terceiro dígitos\n      v = v.replace(/^(\\d{2})(\\d{3})?(\\d{3})?(\\d{4})?(\\d{2})?/, \"$1.$2.$3/$4-$5\")\n\n    }\n    return v\n\n  }\n\n\n\n  function Lista() {\n    return (\n      <>\n        {empresas.map(c => (\n          <Table.Row>\n            <Table.Cell> {c.codigo_impresa} </Table.Cell>\n            <Table.Cell> {c.nome} </Table.Cell>\n            <Table.Cell> {c.cnpj}  </Table.Cell>\n            <Table.Cell> {c.email}  </Table.Cell>\n            <Table.Cell> {c.telefone}  </Table.Cell>\n            <Table.Cell> {c.celular}  </Table.Cell>\n            <Table.Cell> {c.estado}  </Table.Cell>\n            <Table.Cell> {c.cidade}  </Table.Cell>\n            <Table.Cell>\n              <Button.Group>\n                <Button onClick={() => setId(c.id)}>\n                  <Icon name=\"pencil\" />\n                </Button>\n                <Button.Or text='ou' />\n                <Button onClick={() => ExcluirEmpresa(c.id)} color='red'>\n                  <Icon name=\"delete\" />\n                </Button>\n              </Button.Group>\n\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </>\n    )\n  };\n\n  return (\n\n    <>\n\n      {novo === false ?\n        <Segment>\n          <Header>Lista das Empresas   <Button onClick={() => setNovo(!novo)} color='green'>Nova Empresa</Button></Header>\n          <Table compact celled>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>Código</Table.HeaderCell>\n                <Table.HeaderCell>Nome</Table.HeaderCell>\n                <Table.HeaderCell>CNPJ</Table.HeaderCell>\n                <Table.HeaderCell>Email</Table.HeaderCell>\n                <Table.HeaderCell>Telefone</Table.HeaderCell>\n                <Table.HeaderCell>Celular</Table.HeaderCell>\n                <Table.HeaderCell>Estado</Table.HeaderCell>\n                <Table.HeaderCell>Cidade</Table.HeaderCell>\n                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>{Lista()}</Table.Body>\n\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan={9} />\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Segment>\n\n        : null}\n\n\n      {novo === true ?\n        <Segment>\n          <Form>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Código da Empresa</label>\n                <Input\n                  type=\"number\"\n                  value={codigo_impresa}\n                  placeholder=\"Código da Empresa.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n\n              <Form.Field>\n                <label>Nome da empresa</label>\n                <Input\n                  type=\"text\"\n                  onChange={(e, { value }) => setNome([value].toString())}\n                  value={nome}\n                  placeholder=\"Nome da Empresa\"\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>CNPJ</label>\n                <Input\n                  type=\"text\"\n                  onChange={(e, { value }) => setcnpj([value].toString().length <= 18 ? cpfCnpj([value].toString()) : cnpj)}\n                  value={cnpj}\n                  placeholder=\"CNPJ\"\n                />\n              </Form.Field>\n            </Form.Group>\n\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Email</label>\n                <Input\n                  type=\"email\"\n                  onChange={(e, { value }) => setEmail([value].toString())}\n                  value={email}\n                  placeholder=\"Email.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Telefone</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setTelefone([value].toString())}\n                  value={telefone}\n                  placeholder=\"Telefone.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Celular</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setCelular([value].toString())}\n                  value={celular}\n                  placeholder=\"Celular.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Estado</label>\n                <Dropdown\n                  placeholder='Estado.'\n                  fluid\n                  search\n                  selection\n                  value={estado}\n                  onSearchChange={(e, { searchQuery }) => setEstado([searchQuery].toString())}\n                  onChange={(e, { value }) => setEstado([value].toString())}\n                  options={estados}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Cidade</label>\n                <Dropdown\n                  placeholder='Cidade.'\n                  fluid\n                  search\n                  selection\n                  value={cidade}\n                  onSearchChange={(e, { searchQuery }) => setCidade([searchQuery].toString())}\n                  onChange={(e, { value }) => setCidade([value].toString())}\n                  options={cidades}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Button onClick={() => id !== '' ? UpdEmpresa() : cadEmpresa()} primary type=\"submit\" >\n              {id !== '' ? 'Editar' : 'Salvar'}\n            </Button>\n            <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n          </Form>\n        </Segment>\n        : null}\n    </>\n\n  );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {\n    Button,\n    Form,\n    Header,\n    Icon,\n    Input,\n    Dropdown,\n    Segment,\n    Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function Empresas() {\n\n    const [novo, setNovo] = useState(false);\n    const [funcionarios, setFuncionarios] = useState([]);\n\n    const [codigo_funcionario, setCodigo_funcionario] = useState('');\n    const [nome, setNome] = useState('');\n    const [email, setEmail] = useState('');\n    const [telefone, setTelefone] = useState('');\n    const [usuario, setUsuario] = useState('');\n    const [senha, setSenha] = useState('');\n    const [Rsenha, setRSenha] = useState('');\n    const [id, setId] = useState('');\n    const [cod_empresa, setcod_empresa] = useState('');\n\n    useEffect(()=>{\n        setcod_empresa(localStorage.getItem(\"Cd_impresa\"))\n      },[])\n    \n\n    async function cadFuncionario() {\n        if (senha === Rsenha) {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Access-Control-Allow-Origin': '*',\n                },\n                data: {\n                    codigo_funcionario, cd_impresa: cod_empresa, nome, email, telefone, usuario, senha\n                },\n\n                url: 'CriarFuncionarios',\n            };\n            const res = await axios(options);\n            if (res.data.length === 0) {\n\n            } else {\n                ListarFuncionarios();\n                setNovo(false);\n            }\n        } else {\n            alert('Corrija sua senha.');\n        }\n    };\n\n    async function TrazerFuncionarios() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id\n            },\n            url: 'GetOneFuncionarios',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            [res.data].map(r => (\n                setNome(r.nome),\n                setTelefone(r.telefone),\n                setEmail(r.email),\n                setUsuario(r.usuario),\n                setSenha(r.senha),\n                setNovo(true)\n\n            ));\n\n        }\n\n    };\n\n    useEffect(() => {\n        if (id !== '') {\n            TrazerFuncionarios();\n        };\n    }, [id]);\n\n    useEffect(() => {\n        if (novo === false) {\n            setNome('');\n            setTelefone('');\n            setEmail('');\n            setUsuario('');\n            setSenha('');\n            setRSenha('');\n            setId('');\n            setCodigo_funcionario(parseInt(Math.random() * (999999 - 100000) + 100000))\n        };\n    }, [novo]);\n\n    async function UpdFuncionario() {\n        if (senha === Rsenha) {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Access-Control-Allow-Origin': '*',\n                },\n                data: {\n                    nome, email, telefone, usuario, senha, id\n\n                },\n\n                url: 'UpdateFuncionarios',\n            };\n            const res = await axios(options);\n            if (res.data.length === 0) {\n\n            } else {\n                ListarFuncionarios();\n                setNovo(false);\n            }\n        } else {\n            alert('Digite sua senha corretamente no campo \"Repita a Senha\"')\n        }\n    };\n\n    async function ListarFuncionarios() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {cd_impresa:cod_empresa},\n            url: 'ListarFuncionarios',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setFuncionarios([]);\n        } else {\n            setFuncionarios(res.data);\n        }\n    };\n    useEffect(() => {\n        ListarFuncionarios();\n    }, [cod_empresa]);\n\n    async function ExcluirFuncionario(params) {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: { id: params },\n            url: 'DeletarFuncionarios',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            ListarFuncionarios();\n        } else {\n            ListarFuncionarios();\n        }\n    };\n\n    function Lista() {\n        return (\n            <>\n                {funcionarios.map(c => (\n                    <Table.Row>\n                        <Table.Cell> {c.codigoF} </Table.Cell>\n                        <Table.Cell> {c.nome} </Table.Cell>\n                        <Table.Cell> {c.email}  </Table.Cell>\n                        <Table.Cell> {c.telefone}  </Table.Cell>\n                        <Table.Cell> {c.usuario}  </Table.Cell>\n                        <Table.Cell> {c.senha}  </Table.Cell>\n                        <Table.Cell>\n                            <Button.Group>\n                                <Button onClick={() => setId(c.id)}>\n                                    <Icon name=\"pencil\" />\n                                </Button>\n                                <Button.Or text='ou' />\n                                <Button onClick={() => ExcluirFuncionario(c.id)} color='red'>\n                                    <Icon name=\"delete\" />\n                                </Button>\n                            </Button.Group>\n\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </>\n        )\n    };\n\n    return (\n\n        <>\n\n            {novo === false ?\n                <Segment>\n                    <Header>Lista de Funcionarios   <Button onClick={() => setNovo(!novo)} color='green'>Novo Funcionario</Button></Header>\n                    <Table compact celled>\n                        <Table.Header fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell>Código do Funcionario</Table.HeaderCell>\n                                <Table.HeaderCell>Nome</Table.HeaderCell>\n                                <Table.HeaderCell>Email</Table.HeaderCell>\n                                <Table.HeaderCell>Telefone</Table.HeaderCell>\n                                <Table.HeaderCell>Usuario</Table.HeaderCell>\n                                <Table.HeaderCell>Senha</Table.HeaderCell>\n                                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>{Lista()}</Table.Body>\n\n                        <Table.Footer fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={7} />\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Segment>\n\n                : null}\n\n\n            {novo === true ?\n                <Segment>\n                    <Form>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Código do Funcionario</label>\n                                <Input\n                                    type=\"number\"\n                                    value={codigo_funcionario}\n                                    placeholder=\"Código da Empresa.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Nome do Funcionario</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setNome([value].toString())}\n                                    value={nome}\n                                    placeholder=\"Nome da Empresa\"\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Email</label>\n                                <Input\n                                    type=\"email\"\n                                    onChange={(e, { value }) => setEmail([value].toString())}\n                                    value={email}\n                                    placeholder=\"Email.\"\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n                            <Form.Field>\n                                <label>Telefone</label>\n                                <Input\n                                    type=\"number\"\n                                    onChange={(e, { value }) => setTelefone([value].toString())}\n                                    value={telefone}\n                                    placeholder=\"Telefone.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Usuário</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setUsuario([value].toString())}\n                                    value={usuario}\n                                    placeholder=\"Usuário.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n                            <Form.Field>\n                                <label>Senha</label>\n                                <Input\n                                    type=\"password\"\n                                    onChange={(e, { value }) => setSenha([value].toString())}\n                                    value={senha}\n                                    placeholder=\"Senha.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Repita a Senha</label>\n                                <Input\n                                    icon={senha === Rsenha ? 'check' : 'close'}\n                                    type=\"password\"\n                                    onChange={(e, { value }) => setRSenha([value].toString())}\n                                    value={Rsenha}\n                                    placeholder=\"Repita a Senha.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n\n                        <Button onClick={() => id !== '' ? UpdFuncionario() : cadFuncionario()} primary type=\"submit\" >\n                            {id !== '' ? 'Editar' : 'Salvar'}\n                        </Button>\n                        <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n                    </Form>\n                </Segment>\n                : null}\n        </>\n\n    );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {\n    Button,\n    Form,\n    Header,\n    Icon,\n    Input,\n    Dropdown,\n    Segment,\n    Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function Categoria() {\n\n    const [novo, setNovo] = useState(false);\n    const [categorias, setcategorias] = useState([]);\n\n    const [codigo_impresa, setCodigo_empresa] = useState('');\n    const [tituloPT, settituloPT] = useState('');\n    const [tituloEN, settituloEN] = useState('');\n    const [foto, setfoto] = useState(false);\n    const [ordem, setordem] = useState('');\n    const [id, setId] = useState('');\n    const fot = foto.toString()\n\n    useEffect(()=>{\n        setCodigo_empresa(localStorage.getItem(\"Cd_impresa\"))\n      },[]);\n\n    async function cadCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                cd_impresa: codigo_impresa, tituloPT, tituloEN, foto: fot, ordem\n            },\n\n            url: 'CriarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            setNovo(false);\n        }\n    };\n\n    async function TrazerCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id\n            },\n            url: 'GetOneCategorias',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            [res.data].map(r => (\n                settituloEN(r.tituloEN),\n                settituloPT(r.tituloPT),\n                setfoto(r.foto === 'false' ? false : true),\n                setordem(r.ordem),\n                setNovo(true)\n            ));\n\n        }\n\n    };\n\n    useEffect(() => {\n        if (id !== '') {\n            TrazerCategorias();\n        };\n    }, [id]);\n\n    useEffect(() => {\n        if (novo === false) {\n            settituloEN('');\n            settituloPT('');\n            setfoto(false);\n            setId('');\n            setordem('')\n        };\n    }, [novo]);\n\n    async function UpdCategoria() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id, tituloPT, tituloEN, foto: fot, ordem\n\n            },\n\n            url: 'UpdateCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            setNovo(false);\n        }\n    };\n\n    async function ListarCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {cd_impresa:codigo_impresa},\n            url: 'ListarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setcategorias([]);\n        } else {\n            setcategorias(res.data);\n        }\n    };\n    useEffect(() => {\n        ListarCategorias();\n    }, [codigo_impresa]);\n\n    async function ExcluirCategoria(params) {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: { id: params },\n            url: 'DeletarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            ListarCategorias();\n        } else {\n            ListarCategorias();\n        }\n    };\n\n    function Lista() {\n        return (\n            <>\n                {categorias.map(c => (\n                    <Table.Row>\n                        <Table.Cell> {c.id} </Table.Cell>\n                        <Table.Cell> {c.tituloPT} </Table.Cell>\n                        <Table.Cell> {c.tituloEN}  </Table.Cell>\n                        <Table.Cell> {c.foto === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.ordem}  </Table.Cell>\n                        <Table.Cell>\n                            <Button.Group>\n                                <Button onClick={() => setId(c.id)}>\n                                    <Icon name=\"pencil\" />\n                                </Button>\n                                <Button.Or text='ou' />\n                                <Button onClick={() => ExcluirCategoria(c.id)} color='red'>\n                                    <Icon name=\"delete\" />\n                                </Button>\n                            </Button.Group>\n\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </>\n        )\n    };\n\n    return (\n\n        <>\n\n            {novo === false ?\n                <Segment>\n                    <Header>Lista de Categorias   <Button onClick={() => setNovo(!novo)} color='green'>Nova Categoria</Button></Header>\n                    <Table compact celled>\n                        <Table.Header fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell>Código da Categoria</Table.HeaderCell>\n                                <Table.HeaderCell>Titulo em Portugues</Table.HeaderCell>\n                                <Table.HeaderCell>Titulo em Inglês</Table.HeaderCell>\n                                <Table.HeaderCell>É Foto ?</Table.HeaderCell>\n                                <Table.HeaderCell>Ordem </Table.HeaderCell>\n                                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>{Lista()}</Table.Body>\n\n                        <Table.Footer fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={6} />\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Segment>\n\n                : null}\n\n\n            {novo === true ?\n                <Segment>\n                    <Form>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Categoria em Portugues</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloPT([value].toString())}\n                                    value={tituloPT}\n                                    placeholder=\"Categoria em Portugues\"\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Categoria em Inglês</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloEN([value].toString())}\n                                    value={tituloEN}\n                                    placeholder=\"Categoria em Inglês\"\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n                            <Form.Field>\n                                <label>È Foto ?</label>\n                                <button onClick={() => setfoto(!foto)} style={{ width: 150, backgroundColor: foto === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{foto === true ? 'Sim' : 'Não'}</button>\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Ordem de Apresentação</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setordem([value].toString())}\n                                    value={ordem}\n                                    placeholder=\"Ordem de Apresentação.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n\n                        <Button onClick={() => id !== '' ? UpdCategoria() : cadCategorias()} primary type=\"submit\" >\n                            {id !== '' ? 'Editar' : 'Salvar'}\n                        </Button>\n                        <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n                    </Form>\n                </Segment>\n                : null}\n        </>\n\n    );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {\n    Button,\n    Form,\n    Header,\n    Icon,\n    Input,\n    Dropdown,\n    Segment,\n    Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function Categoria() {\n\n    const [novo, setNovo] = useState(false);\n    const [perguntas, setPerguntas] = useState([]);\n    const [categorias, setCategorias] = useState([]);\n    const [categoriasAll, setCategoriasAll] = useState([]);\n\n    const [codigo_impresa, setCodigo_empresa] = useState('');\n    const [codigo_categoria, setcodigo_categoria] = useState('');\n    const [foto, setFoto] = useState(false);\n    const [nomeCateg, setnomeCateg] = useState('');\n    const [perguntaPT, setperguntaPT] = useState('');\n    const [perguntaEN, setperguntaEN] = useState('');\n    const [tituloPT, settituloPT] = useState('');\n    const [tituloEN, settituloEN] = useState('');\n    const [escrever, setescrever] = useState(true);\n    const [assinalar, setassinalar] = useState(false);\n    const [assinatura, setassinatura] = useState(false);\n    const [ordem, setordem] = useState('');\n    const [id, setId] = useState('');\n\n    useEffect(()=>{\n        setCodigo_empresa(localStorage.getItem(\"Cd_impresa\"))\n      },[])\n    \n    function escolher(params) {\n        if (params === 'escrever') {\n            setescrever(true)\n            setassinalar(false)\n            setassinatura(false)\n        }\n        else if (params === 'assinalar') {\n            setescrever(false)\n            setassinalar(true)\n            setassinatura(false)\n        }\n        else if (params === 'assinar') {\n            setescrever(false)\n            setassinalar(false)\n            setassinatura(true)\n        } else {\n            setescrever(false)\n            setassinalar(false)\n            setassinatura(false)\n        }\n    }\n\n\n    function slecionarCategoria(params) {\n        const codigo = categoriasAll.filter(c => (c.tituloPT === params));\n        const codigoID = codigo.map(c => (c.id));\n        const foto = codigo.map(c => (c.foto));\n        if (foto.toString() === 'true') {\n            setFoto(true)\n            setescrever(false)\n            setassinalar(false)\n            setassinatura(false)\n        } else {\n            setFoto(false)\n        }\n\n        setcodigo_categoria(codigoID.toString());\n        setnomeCateg(params);\n    }\n    const es = escrever.toString();\n    const as = assinalar.toString();\n    const ass = assinatura.toString();\n\n    async function cadCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id_categoria: codigo_categoria, cd_impresa: codigo_impresa, perguntaPT, perguntaEN, assinalar: as, assinatura: ass, escrever: es, tituloPT, tituloEN, ordem\n            },\n\n            url: 'CriarPerguntas',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            ListarPerguntas();\n            setNovo(false);\n        }\n    };\n    function namedacateg(params) {\n        const codigo = categoriasAll.filter(c => (c.id.toString() === params));\n        const codigoID = codigo.map(c => (c.tituloPT));\n        return codigoID;\n    }\n    async function TrazerPerguntas() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id\n            },\n            url: 'GetOnePerguntas',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            [res.data].map(r => (\n                setnomeCateg(namedacateg(r.id_categoria).toString()),\n                setperguntaEN(r.perguntaEN),\n                setperguntaPT(r.perguntaPT),\n                setescrever(r.escrever === 'true'?true:false),\n                setassinalar(r.assinalar === 'true'?true:false),\n                setassinatura(r.assinatura === 'true'?true:false),\n                setFoto(r.escrever === 'false' && r.assinalar === 'false' && r.assinatura === 'false' ? true:false),\n                settituloEN(r.tituloEN),\n                settituloPT(r.tituloPT),\n                setordem(r.ordem),\n                setNovo(true)\n            ));\n\n        }\n\n    };\n\n    useEffect(() => {\n        if (id !== '') {\n            TrazerPerguntas();\n        };\n    }, [id]);\n\n    useEffect(() => {\n        if (novo === false) {\n\n            setnomeCateg('')\n            setperguntaEN('');\n            setperguntaPT('');\n            setescrever(true);\n            setassinalar(false);\n            setassinatura(false);\n            setFoto(false);\n            settituloEN('');\n            settituloPT('');\n            setordem('');\n\n        };\n    }, [novo]);\n\n    async function UpdCategoria() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id, id_categoria: codigo_categoria, perguntaPT, perguntaEN, assinalar: as, assinatura: ass, escrever: es, tituloPT, tituloEN, ordem\n\n            },\n\n            url: 'UpdatePerguntas',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            ListarPerguntas()\n            setNovo(false);\n        }\n    };\n\n    async function ListarPerguntas() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {cd_impresa:codigo_impresa},\n            url: 'ListarPerguntas',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setPerguntas([]);\n        } else {\n            setPerguntas(res.data);\n        }\n    };\n\n    async function ListarCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {cd_impresa:codigo_impresa},\n            url: 'ListarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setCategorias([]);\n            setCategoriasAll([])\n\n        } else {\n            const dat = res.data;\n            setCategoriasAll(dat)\n            setCategorias(\n                dat.map(r => (\n                    { key: r.tituloPT, value: r.tituloPT, text: r.tituloPT }\n                )))\n        }\n    };\n    useEffect(() => {\n        ListarCategorias();\n        ListarPerguntas()\n    }, [codigo_impresa]);\n\n\n    async function ExcluirPergunta(params) {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: { id: params },\n            url: 'DeletarPerguntas',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            ListarCategorias();\n            ListarPerguntas()\n        } else {\n            ListarCategorias();\n            ListarPerguntas()\n        }\n    };\n\n    function nomedaCategoria(params) {\n        const nomes = categoriasAll.filter(c => (c.id.toString() === params));\n        const nome = nomes.map(c => (c.tituloPT));\n        return nome;\n    }\n\n    function Lista() {\n        return (\n            <>\n                {perguntas.map(c => (\n                    <Table.Row>\n                        <Table.Cell> {nomedaCategoria(c.id_categoria)} </Table.Cell>\n                        <Table.Cell> {c.perguntaPT} </Table.Cell>\n                        <Table.Cell> {c.perguntaEN}  </Table.Cell>\n                        <Table.Cell> {c.escrever === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.assinalar === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.assinatura === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.tituloPT}  </Table.Cell>\n                        <Table.Cell> {c.tituloEN}  </Table.Cell>\n                        <Table.Cell> {c.ordem}  </Table.Cell>\n                        <Table.Cell>\n                            <Button.Group>\n                                <Button onClick={() => setId(c.id)}>\n                                    <Icon name=\"pencil\" />\n                                </Button>\n                                <Button.Or text='ou' />\n                                <Button onClick={() => ExcluirPergunta(c.id)} color='red'>\n                                    <Icon name=\"delete\" />\n                                </Button>\n                            </Button.Group>\n\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </>\n        )\n    };\n\n    return (\n\n        <>\n\n            {novo === false ?\n                <Segment>\n                    <Header>Lista de Perguntas   <Button onClick={() => setNovo(!novo)} color='green'>Nova Pergunta</Button></Header>\n                    <Table compact celled>\n                        <Table.Header fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell>Categoria</Table.HeaderCell>\n                                <Table.HeaderCell>Pergunta em Portugues</Table.HeaderCell>\n                                <Table.HeaderCell>Pergunta em Inglês</Table.HeaderCell>\n                                <Table.HeaderCell>È de Escrever ?</Table.HeaderCell>\n                                <Table.HeaderCell>È de Assinalar ? </Table.HeaderCell>\n                                <Table.HeaderCell>È uma Assinatura ? </Table.HeaderCell>\n                                <Table.HeaderCell>Subtitulo em Portugues/Opções em Portugues </Table.HeaderCell>\n                                <Table.HeaderCell>Subtitulo em Inglês/Opções em Inglês </Table.HeaderCell>\n                                <Table.HeaderCell>Ordem de Apresentação </Table.HeaderCell>\n                                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>{Lista()}</Table.Body>\n\n                        <Table.Footer fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={10} />\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Segment>\n\n                : null}\n\n\n            {novo === true ?\n                <Segment>\n                    <Form>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Categoria da Pergunta</label>\n                                <Dropdown\n                                    placeholder='Categorias da Pergunta.'\n                                    fluid\n                                    search\n                                    selection\n                                    value={nomeCateg}\n                                    onSearchChange={(e, { searchQuery }) => slecionarCategoria([searchQuery].toString())}\n                                    onChange={(e, { value }) => slecionarCategoria([value].toString())}\n                                    options={categorias}\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Ordem de Apresentação</label>\n                                <Input\n                                    type=\"number\"\n                                    onChange={(e, { value }) => setordem([value].toString())}\n                                    value={ordem}\n                                    placeholder=\"Ordem de apresentação.\"\n                                    fluid\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Pergunta em Portugues</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setperguntaPT([value].toString())}\n                                    value={perguntaPT}\n                                    placeholder=\"Pergunta em Portugues.\"\n                                    fluid\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Pergunta em Inglês</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setperguntaEN([value].toString())}\n                                    value={perguntaEN}\n                                    placeholder=\"Pergunta em Inglês.\"\n                                    fluid\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n\n                        <div style={{ alignItems: 'center', justifyContent: 'center', display: foto === false ? 'flex' : 'none' }}>\n                            <Form.Group unstackable widths={2}>\n                                <Form.Field>\n                                    <label>È de Escrever ?</label>\n                                    <button onClick={() => escolher('escrever')} style={{ width: 150, backgroundColor: escrever === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{escrever === true ? 'Sim' : 'Não'}</button>\n                                </Form.Field>\n\n                                <Form.Field>\n                                    <label>È de Assinalar ?</label>\n                                    <button onClick={() => escolher('assinalar')} style={{ width: 150, backgroundColor: assinalar === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{assinalar === true ? 'Sim' : 'Não'}</button>\n                                </Form.Field>\n\n                                <Form.Field>\n                                    <label>È uma Assinatura ?</label>\n                                    <button onClick={() => escolher('assinar')} style={{ width: 150, backgroundColor: assinatura === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{assinatura === true ? 'Sim' : 'Não'}</button>\n                                </Form.Field>\n\n                            </Form.Group>\n                        </div>\n\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>{assinalar === true ? 'Opções em Portugues' : 'Subtitulo em Portugues'}</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloPT([value].toString())}\n                                    value={tituloPT}\n                                    placeholder={assinalar === true ? 'Ex: Sim, Não' : 'Qual o Documento do Motorista'}\n                                    fluid\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>{assinalar === true ? 'Opções em Inglês' : 'Subtitulo em Inglês'}</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloEN([value].toString())}\n                                    value={tituloEN}\n                                    placeholder={assinalar === true ? 'Ex: Yes, No' : 'What is the Driver\"s Document?'}\n                                    fluid\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n\n                        <Button onClick={() => id !== '' ? UpdCategoria() : cadCategorias()} primary type=\"submit\" >\n                            {id !== '' ? 'Editar' : 'Salvar'}\n                        </Button>\n                        <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n                    </Form>\n                </Segment>\n                : null}\n        </>\n\n    );\n\n};","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Header, Segment, Image, Form, Input, Dropdown, Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Perfil() {\r\n\r\n    const [cod_empresa, setcod_empresa] = useState('');\r\n\r\n    const [tipo_conta, settipo_conta] = useState('');\r\n    const [logo, setlogo] = useState('logo2.png');\r\n    const [responsavel, setresponsavel] = useState('');\r\n    const [empresa, setempresa] = useState('');\r\n    const [cnpj, setcnpj] = useState('');\r\n    const [inscricao, setinscricao] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [telefone, settelefone] = useState('');\r\n    const [usuario, setusuario] = useState('');\r\n    const [senha, setsenha] = useState('');\r\n    const [id, setid] = useState('');\r\n    const [estado, setestado] = useState('');\r\n    const [cidade, setcidade] = useState('');\r\n    const [cidades, setCidades] = useState([]);\r\n    const [estados, setEstados] = useState([]);\r\n\r\n    function cpfCnpj(v) {\r\n\r\n        //Remove tudo o que não é dígito\r\n        v = v.replace(/\\D/g, \"\")\r\n\r\n        if (v.length <= 14) {\r\n\r\n            //Coloca ponto entre o segundo e o terceiro dígitos\r\n            v = v.replace(/^(\\d{2})(\\d{3})?(\\d{3})?(\\d{4})?(\\d{2})?/, \"$1.$2.$3/$4-$5\")\r\n\r\n        }\r\n        return v\r\n\r\n    }\r\n\r\n    async function trazerDados() {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n            data: { cd_funcionario: '', cd_impresa: cod_empresa },\r\n            url: 'TrazerDados',\r\n        };\r\n        const res = await axios(options);\r\n        const dad = res.data;\r\n        if (dad.length !== undefined) {\r\n            dad.map(d => (\r\n                setresponsavel(d.nome),\r\n                setempresa(d.empresa),\r\n                setcnpj(cpfCnpj(d.cnpj)),\r\n                setinscricao(d.inscricao),\r\n                setemail(d.email),\r\n                settelefone(d.telefone),\r\n                setusuario(d.usuario),\r\n                setsenha(d.senha),\r\n                setestado(d.estado),\r\n                setcidade(d.cidade),\r\n                setlogo(d.logo),\r\n                settipo_conta(d.tipo_cadastro),\r\n                setid(d.id)\r\n            ))\r\n        }\r\n\r\n    };\r\n\r\n    async function update() {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n            data: { id, logo, nome: responsavel, cnpj, inscricao, email, empresa, telefone, usuario, senha, tipo_cadastro: tipo_conta, estado, cidade },\r\n            url: 'UpdateUsuarios',\r\n        };\r\n        const res = await axios(options);\r\n        const est = res.data;\r\n        trazerDados()\r\n        alert('Dados atualizados com sucesso..')\r\n    };\r\n\r\n    async function trazerCidades() {\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n            data: {},\r\n            url: 'https://servicodados.ibge.gov.br/api/v1/localidades/estados/' + estado + '/municipios?orderBy=nome',\r\n        };\r\n        const res = await axios(options);\r\n        const est = res.data;\r\n        setCidades(\r\n            est.map(e => (\r\n                { key: e.id, value: e.nome, text: e.nome }\r\n            ))\r\n        )\r\n    };\r\n\r\n    useEffect(() => {\r\n        trazerCidades()\r\n    }, [estado])\r\n\r\n    async function trazerEstados() {\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n            data: {},\r\n            url: 'https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome',\r\n        };\r\n        const res = await axios(options);\r\n        const est = res.data;\r\n        setEstados(\r\n            est.map(e => (\r\n                { key: e.id, value: e.sigla, text: e.nome }\r\n            ))\r\n        )\r\n    };\r\n\r\n    useEffect(() => {\r\n        trazerEstados()\r\n        trazerDados()\r\n    }, [cod_empresa])\r\n\r\n    useEffect(() => {\r\n        setcod_empresa(localStorage.getItem(\"Cd_impresa\"))\r\n    }, [])\r\n\r\n    async function encodeImageFileAsURL(e) {\r\n        const formData = new FormData();\r\n        formData.append('image', e);\r\n\r\n        const headers = {\r\n            'headers': {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        await axios.post(\"Uploads\", formData, headers)\r\n            .then((response) => {\r\n                setlogo(e.name)\r\n            }).catch((err) => {\r\n\r\n            });\r\n\r\n    };\r\n\r\n    function cpfCnpj(v) {\r\n\r\n        //Remove tudo o que não é dígito\r\n        v = v.replace(/\\D/g, \"\")\r\n\r\n        if (v.length <= 14) {\r\n\r\n            //Coloca ponto entre o segundo e o terceiro dígitos\r\n            v = v.replace(/^(\\d{2})(\\d{3})?(\\d{3})?(\\d{4})?(\\d{2})?/, \"$1.$2.$3/$4-$5\")\r\n\r\n        }\r\n        return v\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Segment>\r\n                <Header>Perfil da empresa </Header>\r\n                <center>\r\n                    <div style={{ width: 200 }}>\r\n                        <Image style={{ width: 200}} src={'http://3.139.66.31:3000/' + logo} size='medium'  />\r\n                    </div>\r\n                </center>\r\n\r\n                <Form>\r\n                    <Form.Group unstackable widths={2}>\r\n                        <Form.Field>\r\n                            <label>Tipo de conta</label>\r\n                            <Dropdown\r\n                                placeholder='Tipo de conta.'\r\n                                fluid\r\n                                search\r\n                                selection\r\n                                value={tipo_conta}\r\n                                onSearchChange={(e, { searchQuery }) => settipo_conta([searchQuery].toString())}\r\n                                onChange={(e, { value }) => settipo_conta([value].toString())}\r\n                                options={[{ key: '1', value: 'Fisica', text: 'Conta Fisica' }, { key: '2', value: 'Juridica', text: 'Conta Juridica' }]}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Logo da empresa</label>\r\n                            <Input\r\n                                type=\"file\"\r\n                                onChange={e => encodeImageFileAsURL(e.target.files[0])}\r\n                                placeholder=\"Número do contrato.\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group unstackable widths={2}>\r\n                        <Form.Field>\r\n                            <label>Nome do responsavel</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                value={responsavel}\r\n                                onChange={(value) => setresponsavel(value.target.value)}\r\n                                placeholder=\"Nome do responsavel.\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Nome da empresa</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                value={empresa}\r\n                                onChange={(value) => setempresa(value.target.value)}\r\n                                placeholder=\"Nome da empresa.\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group unstackable widths={2}>\r\n                        <Form.Field>\r\n                            <label>Cnpj</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                value={cnpj}\r\n                                onChange={(e, { value }) => setcnpj([value].toString().length <= 18 ? cpfCnpj([value].toString()) : cnpj)}\r\n                                placeholder=\"Cnpj.\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Inscrição estadual</label>\r\n                            <Input\r\n                                type=\"number\"\r\n                                value={inscricao}\r\n                                onChange={(value) => setinscricao(value.target.value)}\r\n                                placeholder=\"Inscrição estadual.\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group unstackable widths={2}>\r\n                        <Form.Field>\r\n                            <label>Email</label>\r\n                            <Input\r\n                                type=\"email\"\r\n                                value={email}\r\n                                onChange={(value) => setemail(value.target.value)}\r\n                                placeholder=\"Email.\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Telefone</label>\r\n                            <Input\r\n                                type=\"number\"\r\n                                value={telefone}\r\n                                onChange={(value) => settelefone(value.target.value)}\r\n                                placeholder=\"Telefone.\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group unstackable widths={2}>\r\n                        <Form.Field>\r\n                            <label>Usuário</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                value={usuario}\r\n                                onChange={(value) => setusuario(value.target.value)}\r\n                                placeholder=\"Usuário.\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Senha</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                value={senha}\r\n                                onChange={(value) => setsenha(value.target.value)}\r\n                                placeholder=\"Senha.\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group unstackable widths={2}>\r\n                        <Form.Field>\r\n                            <label>Estado</label>\r\n                            <Dropdown\r\n                                placeholder='Estado.'\r\n                                fluid\r\n                                search\r\n                                selection\r\n                                value={estado}\r\n                                onSearchChange={(e, { searchQuery }) => setestado([searchQuery].toString())}\r\n                                onChange={(e, { value }) => setestado([value].toString())}\r\n                                options={estados}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Cidade</label>\r\n                            <Dropdown\r\n                                placeholder='Cidade.'\r\n                                fluid\r\n                                search\r\n                                selection\r\n                                value={cidade}\r\n                                onSearchChange={(e, { searchQuery }) => setcidade([searchQuery].toString())}\r\n                                onChange={(e, { value }) => setcidade([value].toString())}\r\n                                options={cidades}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n                <Button onClick={() => update()} color=\"green\">Salvar</Button>\r\n\r\n            </Segment>\r\n        </>\r\n\r\n    );\r\n\r\n};","import React from 'react'\nimport { Route } from 'react-router'\nimport Layout from '.././layout/Layout'\nimport Home from '.././pages/Home'\nimport Empresas from '../pages/Empresas'\nimport Funcionarios from '../pages/Funcionarios'\nimport Categoria from '../pages/Categorias'\nimport Perguntas from '../pages/Perguntas'\nimport Perfil from '../pages//Perfil'\n\nexport default () => (\n  <Layout>\n    <Route exact path=\"/checklist\" component={Home} />\n    <Route path=\"/empresas\" component={Empresas} />\n    <Route path=\"/perfil\" component={Perfil} />\n    <Route path=\"/funcionarios\" component={Funcionarios} />\n    <Route path=\"/categoria\" component={Categoria} />\n    <Route path=\"/perguntas\" component={Perguntas} />\n  </Layout>\n);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/css/bootstrap-theme.css'\nimport './styles/index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'react-router-redux'\nimport { createBrowserHistory } from 'history'\nimport configureStore from './store/configureStore'\nimport App from './components/layout/App'\nimport registerServiceWroker from './components/common/registerServiceWorker'\n\n// Create browser history to use in the Redux store\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href')\nconst history = createBrowserHistory({ basename: baseUrl })\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst initialState = window.initialReduxState\nconst store = configureStore(history, initialState)\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  rootElement)\n\nregisterServiceWroker()\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\nimport * as Card from './Card';\nimport * as SideMenu from \"./SideMenu\";\nimport * as UserManagement from \"./UserManagement\";\nimport * as SearchStore from \"./SearchStore\";\n\nexport default function configureStore(history, initialState) {\n  const reducers = {\n    card: Card.reducer,\n    sideMenu: SideMenu.reducer,\n    userManagement: UserManagement.reducer,\n    searchStore: SearchStore.reducer,\n  };\n\n  const middleware = [\n    thunk,\n    routerMiddleware(history)\n  ];\n\n  // In development, use the browser's Redux dev tools extension if installed\n  const enhancers = [];\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\n    enhancers.push(window.devToolsExtension());\n  }\n\n  const rootReducer = combineReducers({\n    ...reducers,\n    routing: routerReducer\n  });\n\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ...enhancers)\n  );\n}\n"],"sourceRoot":""}